apiVersion: v1
kind: Service
metadata:
  name: webapplication2-svc
spec:
  type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: webapplication2
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-blob
spec:
  capacity:
    storage: 1Pi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain  # If set as "Delete" container would be removed after pvc deletion
  storageClassName: azureblob-nfs-premium
  csi:
    driver: blob.csi.azure.com
    readOnly: false
    # make sure volumeid is unique for every identical storage blob container in the cluster
    # character `#` is reserved for internal use and cannot be used in volumehandle
    volumeHandle: <resorucegroup>#<storageaccount>#<containername>
    volumeAttributes:
      resourceGroup: <resorucegroup>
      storageAccount: <storageaccount>
      containerName: <containername>
      protocol: nfs
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-blob
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 40Gi
  volumeName: pv-blob
  storageClassName: azureblob-nfs-premium
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapplication2-deployment
  labels:
    app: webapplication2-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapplication2
  template:
    metadata:
      labels:
        app: webapplication2
    spec:
      containers:
      - name: webapplication2
        image: acrtestdev02.azurecr.io/webapplication2:0.0.1
        volumeMounts:
        - mountPath: "/app/test"
          name: volume
        ports:
        - containerPort: 80
      volumes:
        - name: volume
          persistentVolumeClaim:
            claimName: pvc-blob